# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

stages:
- stage: "BuildStage"
  jobs:
  - job: "BuildJob"
    pool:
      vmImage: ubuntu-latest

    variables:
      buildConfiguration: 'Release'

    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
        feedsToUse: 'select'
        
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration $(BuildConfiguration)'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
    
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'container'

- stage: "DeployToDev"
  dependsOn: "BuildStage"
  jobs: 
  - job: "DepoloyToDevContainer"
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'drop'
        targetPath: '$(Pipeline.Workspace)'
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'MY-VSTs'
        appType: 'webApp'
        WebAppName: 'demo-devapp'
        packageForLinux: '$(Pipeline.Workspace)/**/*.zip'

- stage: "DeployToQA"
  dependsOn: "DeployToDev"
  jobs: 
  - job: "DepoloyToQA"
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'drop'
        targetPath: '$(Pipeline.Workspace)'

    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'MY-VSTs'
        appType: 'webApp'
        WebAppName: 'demo-QAapp'
        packageForLinux: '$(Pipeline.Workspace)/**/*.zip'

- stage: "DeployToProd"
  dependsOn: "DeployToQA"
  jobs: 
  - job: "DepoloyToProd"
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'drop'
        targetPath: '$(Pipeline.Workspace)'
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'MY-VSTs'
        appType: 'webApp'
        WebAppName: 'demo-Prodapp'
        deployToSlotOrASE: true
        ResourceGroupName: 'DevOpsRG-class'
        SlotName: 'staging'
        packageForLinux: '$(Pipeline.Workspace)/**/*.zip'
    - task: AzureAppServiceManage@0
      inputs:
        azureSubscription: 'MY-VSTs'
        Action: 'Swap Slots'
        WebAppName: 'demo-Prodapp'
        ResourceGroupName: 'DevOpsRG-class'
        SourceSlot: 'staging'
